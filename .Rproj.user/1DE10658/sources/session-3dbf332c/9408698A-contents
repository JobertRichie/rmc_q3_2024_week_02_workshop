---
title: "Workshop 6: Grouping, Summarizing and Plotting"
output:
  prettydoc::html_pretty:
    theme: architect
    toc: true
    number_sections: true
author: "Jobert Richie Nansseu"
date: "2024-05-14"
editor_options: 
  chunk_output_type: console
---

# Data preparation

To get started, **load in the needed packages**: {tidyverse}, {here}, {janitor}, and {esquisse}.

```{r}
#Loading the necessary packages
if(!require(pacman)) install.packages("pacman")
pacman::p_load(here,
              knitr,
              janitor,
              tidyverse,
              ggplot2,
              esquisse)
```

Now, **read the dataset into R**. The data frame you import should have 880 rows and 21 columns. Remember to use the `here()` function to allow your Rmd to use project-relative paths.

```{r}
# Import CSV
tb_raw <- read_csv(here(file = "data/india_tuberculosis.csv"))

# Make sure imported data looks OK and familiarize yourself with the variables
head(tb_raw) 
```

The names of many columns in this dataset have spaces and symbols in them (e.g., `Treatment initiation delay (in days)`), which is not R-friendly.

Use `janitor::clean_names()` to give your variable names a clean and consistent format.

```{r}
# Clean variable names
tb_renamed <- tb_raw %>% 
  clean_names()
```

**Checkpoint**: The data frame should contain 880 rows and 21 columns. Column/variable names should now be converted to snake case. You can run `names(tb_renamed)` to print and check the variable names.

Before moving further, let's take a closer look at the `education` variable in our dataset:

```{r}
# count() lets you quickly count the unique values of variables
tb_renamed %>% 
  count(education)
```

Here we see that there are 8 unique values in the `education` variable, telling us the highest education level of each TB patient. You'll notice that education levels are ordered alphabetically by default! However, in this case, it would be more useful to reorder the education levels so that they are arranged in a chronological order.

The basic structure of education in India can be conceptualized as follows:

-   Primary -\> Middle -\> Secondary -\> Higher Secondary -\> Graduate -\> Graduate & Above

Use `mutate()` and other **helper functions** to convert the `education` variable into a factor define the levels based on the order above.

Complete the code by filling in the blanks provided below. Save the updated dataset as a new data frame called `tb_clean`.

**Hint**: See the last example in section 10 of the [Conditional Mutate lesson](https://the-graph-courses.github.io/data_untangled_wp/lessons/ls04_conditional_mutate.html#10_Multiple_conditions_on_a_single_variable) for a refresher on how to define factor levels.

```{r}
tb_clean <- tb_renamed %>% 
  mutate(education = factor(education, 
                            levels = c("No Education",
                                       "Primary", 
                                       "Middle", 
                                       "Secondary", 
                                       "Higher Secondary",                                        "Graduate",
                                       "Graduate & Above",
                                       "Missing")))

#Verification
tb_clean %>% 
  count(education)
```

We will use the newly transformed `education` variable for grouping, summarizing, and plotting below.

------------------------------------------------------------------------

# Investigating healthcare costs

## Step 1: Calculate a `total_cost` variable

Each patient record notes the location and cost of up to three locations. Add together these costs (`first_visit_cost`, `second_visit_cost`, and `third_visit_cost`) to create a `total_cost` variable.

```{r}
tb_clean2 <- tb_clean %>% 
  mutate(total_cost = first_visit_cost + second_visit_cost + third_visit_cost)
#Verification
tb_clean2 %>% 
  select(first_visit_cost, second_visit_cost, third_visit_cost, total_cost) 
```

## Step 2: Summarize costs by group

Let's compare the cost of treatment at different health facilities using a summary table. Use `{dplyr}` verbs to group by education level and create a summary table with two variables:

-   The number of patients in each education level
-   The mean total cost for each education level

Store the resulting tibble as an object called `edu_edu_cost_table`.

```{r }
edu_cost_table <- tb_clean2 %>% 
  group_by(education) %>% 
  summarise(n = n(),
            mean_total_cost = mean(total_cost, na.rm = T))
edu_cost_table

#Draw a table
flextable::flextable(edu_cost_table) %>% 
  flextable::set_caption(caption = "Table 1: Mean total cost by education type")

edu_cost_table %>% 
  kable(caption = "Mean total cost by education type")

edu_cost_table %>% 
gt::gt() %>% 
  gt::tab_header(title = "Table 1: Mean total cost by education type")
```

Reorder the rows of the summary table to go from highest to lowest mean cost.

```{r}
edu_cost_table %>% 
  arrange(desc(mean_total_cost))
```

Here we can see that TB patients in this study with little to no schooling generally spent less money on treatment than graduates. This data can be better communicated with a plot.

------------------------------------------------------------------------

# Visualize data with {esquisse}

Using `esquisser()` and the costs summary table you created earlier, create a bar plot of mean costs, by education level.

```{r}
# esquisser(edu_cost_table)
plot1 <- ggplot(edu_cost_table) +
  aes(x = education, weight = mean_total_cost) +
  geom_bar(fill = "#FF8C00") +
  labs(
    x = "Education level",
    y = "Mean total cost of healthcare",
    title = "Distribution of the mean total cost of care per education level"
  ) +
  theme_gray()
plot1
```

When you are satisfied with your plot, use `ggsave()` to save your plot above in a new folder called "outputs". Remember to specify the file type and dimensions of the image you want to export.

```{r}
# Save your plot(s)
ggplot2::ggsave(plot = plot1, filename = here("outputs/cost_per_education.jpg"))
```

------------------------------------------------------------------------

# Wrap up

That's it for this assignment! We will choose 2-3 people to present your work during the workshop. If you would like to share your results with the class, please let an instructor know.

The group representative should prepare to screenshare and give a short (3-4 sentence) presentation.

Choose and highlight one aspect of your code or plot that would be helpful and interesting to the class. For example, you can choose a question that your group found especially tricky, and explain how you found the solution. Or you can display one of your plots, and share some tips for additional customization.

------------------------------------------------------------------------

# Submit

Once you have finished the tasks above, you should save your answers and upload your assignment Rmd on the workshop webpage. You should upload just one Rmd file with your answers (do not upload the knitted HTML or a zipped folder). Make sure to include your name in the YAML header at the top of the script.

The due date for the assignment is **Friday, May 17th** at 23:59 PM GMT.

------------------------------------------------------------------------

# Bonus Challenge (Optional and ungraded)

If you finish early and have extra time, you can explore and transform the dataset further.

We can look at two types of health facilities in the dataset: private and public (government).

```{r}
# List of 9 healthcare locations
tb_clean2 %>% count(first_visit_location)
```

Note: PHC = primary health center, GH = govt hospital etc.

## Comparing Delays in Public vs Private Health Facilities

Let's create a new variable indicating whether a healthcare location is private or public. We can do this using the `str_detect()` function from the `{stringr}` package of tidyverse.

```{r}
tb_clean3 <- tb_clean2 %>% 
  mutate(first_visit_type = case_when(
    str_detect(first_visit_location, "Pvt") ~ "Private",
    TRUE ~ "Public"))

#OR

tb_clean3 <- tb_clean2 %>% 
  mutate(first_visit_type = case_when(
    first_visit_location %in% c("Pvt. clini", "Pvt. docto", "Pvt. hospi", "T.Pvt") ~ "Private",
    TRUE ~ "Public"
  ))

#OR

 tb_clean3 <- tb_clean2 %>% 
  mutate(first_visit_type = if_else(
    str_detect(first_visit_location, "Pvt"), "Private", "Public"))
 
tb_clean3 %>% 
  count(first_visit_type)
```

Inspect the new variable in `tb_clean3`.

Your assignment for this challenge is to summarize delays in treatment, and compare the length of delays between private and public health facilities.

You can start by making summary table of `treatment_initiation_delay_in_days` or `health_sys_delay_in_days`, grouped by `first_visit_type`. Then visualize the data and draw insights from your findings.
```{r}
delays_per_facility_type <- 
  tb_clean3 %>% 
  group_by(first_visit_type) %>% 
  summarise(median_1 = median(health_sys_delay_in_days, na.rm=T),
            mean_1 = mean(health_sys_delay_in_days, na.rm=T),
            min_1 = min(health_sys_delay_in_days, na.rm=T),
            max_1 = max(health_sys_delay_in_days, na.rm=T),
            median_2 = median(treatment_initiation_delay_in_days, na.rm = T),
            mean_2 = mean(treatment_initiation_delay_in_days, na.rm=T),
            min_2 = min(treatment_initiation_delay_in_days, na.rm=T),
            max_2 = max(treatment_initiation_delay_in_days, na.rm = T))
```

```{r}
#Visualization

plot2 <- ggplot(tb_clean3) +
  aes(x = health_sys_delay_in_days, y = first_visit_type) +
  geom_boxplot(fill = "#112446") +
   theme_gray() +
  coord_flip() +
  scale_x_log10()

ggsave(filename = here("outputs/health_delay_plot.jpg"), plot = plot2)
 
plot3 <- ggplot(tb_clean3) +
  aes(x = treatment_initiation_delay_in_days, y = first_visit_type) +
  geom_boxplot(fill = "#112446") +
   theme_gray() +
  coord_flip() +
  scale_x_log10()

ggsave(filename = here("outputs/treatment_delay_plot.jpg"), plot = plot3)
```

**Interpretation**
From this summary table, we observe that the delay in treatment initiation seems longer in public health facilities, even though the maximal treatment initiation delay was reported in a private facility (110 days).

However, this table shows that the delay in health care system tends to be longer in private facilities than in public ones where it seems shorter. 

Nevertheless, there is need to undertake statistical tests to investigate whether or not there is a statistical difference between the two types of facilities with regard to both delays.
